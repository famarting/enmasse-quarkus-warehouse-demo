apiVersion: v1
kind: Template
metadata:
  name: amqp-cloud-native-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    # replicas: ${REPLICAS}
    replicas: 1
    selector:
      matchLabels:
        app: ${SERVICE_NAME}
    template:
      metadata:
        labels:
          app: ${SERVICE_NAME}
      spec:
        containers:
        - image: ${CONTAINER_IMAGE}
          imagePullPolicy: Always
          name: ${SERVICE_NAME}
          env:
            - name: amqp-host
              valueFrom:
                configMapKeyRef:
                  name:  messaging-config
                  key:  service.host
            - name: amqp-port
              valueFrom:
                configMapKeyRef:
                  name:  messaging-config
                  key:  service.port.amqp
            - name: amqp-username
              value: demo-user
            - name: amqp-password
              value: demo-user
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGO_CONN_STR
              value: mongodb://admin:password@mongo-database:27017
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 7
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 15
            timeoutSeconds: 7
          terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    ports:    
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: http
    selector:
      app: ${SERVICE_NAME}
    type: LoadBalancer
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
parameters:
- description: Container image name, including registry url
  displayName: Container image name, including registry url
  required: true
  name: CONTAINER_IMAGE
- description: service name
  displayName: service name
  required: true
  name: SERVICE_NAME
# - description: replicas
#   displayName: replicas
#   required: true
#   name: REPLICAS
labels:
  template: amqp-cloud-native-template